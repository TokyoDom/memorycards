{"version":3,"sources":["firebase/firebase.js","components/Flashcard.js","HomeViews/LoggedOut.js","HomeViews/quotes/quotes.js","HomeViews/LoggedIn.js","Home.js","components/CreationModal.js","CreationViews/SingleCard.js","components/Minicard.js","CreationViews/MultiCard.js","components/SignUpModal.js","Creation.js","PracticePages/PracticeHome.js","PracticePages/Standard.js","PracticePages/Typing.js","PracticePages/Quiz.js","Practice.js","components/ResetPassModal.js","Profile.js","Login.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","root","position","height","border","cursor","index","top","left","zIndex","padding","flip","right","arrows","bottom","marginLeft","text","display","alignItems","justifyContent","Flashcard","props","classes","useState","set","flashCards","setFlashCards","setName","changeSetName","setFlip","setIndex","useEffect","Card","style","cardStyles","className","elevation","IconButton","size","onClick","e","noFlip","CardContent","flipCardStyles","Typography","id","indexStyles","length","variant","card","undefined","front","frontText","back","backText","CardActions","arrowStyles","Button","nextQuestion","setTimeout","LoggedOut","state","this","ButtonGroup","marginTop","component","Link","to","color","Component","quotes","quote","author","LoggedIn","showQuote","day","Date","getDate","filter","flexDirection","width","margin","fontFamily","marginBottom","loading","userInfo","cardSets","type","db","firestore","setState","collection","where","uid","orderBy","limit","get","docs","map","doc","data","CircularProgress","i","key","name","styles","pathname","Home","loggedIn","CreationModal","Dialog","open","isOpen","onClose","modalOpen","DialogContent","TextField","autoFocus","label","fullWidth","value","modCard","onChange","setText","DialogActions","saveChanges","btnGroup","SingleCard","changeModCard","updateSet","saveSet","delSet","addModal","addModalOpen","editModal","editModalOpen","getIndex","document","getElementById","textContent","parseInt","substring","indexOf","startIcon","newSet","splice","delCard","edit","delete","Minicard","moveCard","findCard","handleEdit","handleDelCard","originalIndex","useDrag","item","collect","monitor","isDragging","end","dropResult","getItem","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","ref","node","opacity","MultiCard","cards","setCards","atIndex","update","$splice","num","handleAdd","oldCard","el","SignUpModal","closeModal","userName","setUserName","email","setEmail","password","setPassword","passConfirm","setPassConfirm","error","setError","signUpUser","a","auth","createUserWithEmailAndPassword","userCredentials","user","backgroundColor","add","message","DialogTitle","target","Creation","handleSetSelect","singView","initialSet","signUpModalClose","close","signUpModal","renderCardSets","FormControl","InputLabel","Select","native","saveNewSet","date","Timestamp","fromDate","alert","console","log","notSame","initSet","forEach","setQuery","fbSetName","dataSet","saveModal","renderView","location","DndProvider","backend","Backend","options","HTML5toTouch","alreadyExists","textDecoration","PracticeHome","gutterBottom","Standard","changeSet","isShuffled","setShuffle","FormControlLabel","control","Switch","checked","_","shuffle","Typing","ansCount","setCount","answer","setAnswer","shufSet","changeShufSet","useLocation","checkAnswer","rightAnswer","querySelector","replace","toLowerCase","userAnswer","click","Paper","helperText","onKeyDown","keyCode","Quiz","report","setReport","saveAnswer","qna","correct","newReport","reset","score","Math","round","renderReport","Practice","renderRedirect","exact","path","render","window","ResetPassModal","sent","setSent","resetPass","sendPasswordResetEmail","profile","gridTemplateColumns","gridRowGap","colorRoot","flexWrap","colors","Profile","unsaved","merge","setColor","renderColors","activeColor","cloneDeep","resetModal","disabled","Login","handleEmail","handlePass","pass","handleLogin","signInWithEmailAndPassword","handleEnter","code","Navbar","signedOut","anchorEl","setAnchorEl","setSignUpModal","matches","useMediaQuery","signOut","AppBar","Toolbar","edge","marginRight","currentTarget","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","Boolean","MenuItem","createMuiTheme","palette","primary","main","secondary","App","verified","unsub","onAuthStateChanged","onSnapshot","basename","ThemeProvider","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4442a52f.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAF9wDjZiPS8822QxVuR0xi-DZsu7uf8Pk\",\r\n  authDomain: \"memorycards-8c2a4.firebaseapp.com\",\r\n  databaseURL: \"https://memorycards-8c2a4.firebaseio.com\",\r\n  projectId: \"memorycards-8c2a4\",\r\n  storageBucket: \"memorycards-8c2a4.appspot.com\",\r\n  messagingSenderId: \"713179064974\",\r\n  appId: \"1:713179064974:web:445a28d620dd32af5eb7df\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FlipToFrontIcon from \"@material-ui/icons/FlipToFront\";\r\nimport FlipToBackIcon from \"@material-ui/icons/FlipToBack\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"relative\",\r\n    height: 250,\r\n    border: \"1px solid black\",\r\n    cursor: \"pointer\"\r\n  },\r\n  index: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 3,\r\n    padding: \"2px 4px\"\r\n  },\r\n  flip: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 3\r\n  },\r\n  arrows: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: \"50%\",\r\n    marginLeft: -75,\r\n    zIndex: 3\r\n  },\r\n  text: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\n//Set is only prop from state, card handles index\r\nfunction Flashcard(props) {\r\n  let classes = useStyles();\r\n  const [flashCards, setFlashCards] = useState(props.set);\r\n  const [setName, changeSetName] = useState(props.setName);\r\n  const [flip, setFlip] = useState(false);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  //go to beginning when set is changed\r\n  useEffect(() => {\r\n    if (props.setName !== setName) {\r\n      changeSetName(props.setName);\r\n      setFlip(false);\r\n      setIndex(0);\r\n    }\r\n    setFlashCards(props.set);\r\n  }, [setName, props.setName, flashCards, props.set]);\r\n\r\n  const frontText = set => {\r\n    if (set.length !== 0) {\r\n      if (index >= set.length) {\r\n        setIndex(set.length - 1);\r\n      }\r\n      const card = set[index];\r\n      return card === undefined ? null : card.front;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const backText = set => {\r\n    if (set.length !== 0) {\r\n      if (index >= set.length) {\r\n        setIndex(set.length - 1);\r\n      }\r\n      const card = set[index];\r\n      return card === undefined ? null : card.back;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={props.cardStyles}\r\n      className={`${classes.root} ${flip ? \"show-answer\" : \"\"}`}\r\n      elevation={3}\r\n    >\r\n      <IconButton\r\n        size=\"small\"\r\n        className={classes.flip}\r\n        onClick={e => (props.noFlip ? null : setFlip(!flip))}\r\n      >\r\n        {flip ? <FlipToBackIcon /> : <FlipToFrontIcon />}\r\n      </IconButton>\r\n      <CardContent\r\n        style={props.flipCardStyles}\r\n        className={classes.text}\r\n        onClick={e => (props.noFlip ? null : setFlip(!flip))}\r\n      >\r\n        <Typography\r\n          id=\"index\"\r\n          className={classes.index}\r\n          style={props.indexStyles}\r\n        >\r\n          {flashCards.length === 0 ? 0 : index + 1}/{flashCards.length}\r\n        </Typography>\r\n        <CardContent className=\"inner\">\r\n          <Typography className=\"front\" variant=\"body1\">\r\n            {frontText(flashCards)}\r\n          </Typography>\r\n          <Typography className=\"back\" variant=\"body1\">\r\n            {backText(flashCards)}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardContent>\r\n      <CardActions className={classes.arrows} style={props.arrowStyles}>\r\n        <Button\r\n          className=\"go-left\"\r\n          onClick={e => {\r\n            if (index > 0) {\r\n              setFlip(false);\r\n              if (props.nextQuestion) props.nextQuestion();\r\n              setTimeout(() => setIndex(index - 1), 125);\r\n            }\r\n            if (index === 0) {\r\n              setFlip(false);\r\n              if (props.nextQuestion) props.nextQuestion();\r\n              setTimeout(() => setIndex(flashCards.length - 1), 125);\r\n            }\r\n          }}\r\n        >\r\n          <ArrowLeftIcon />\r\n        </Button>\r\n        <Button\r\n          className=\"go-right\"\r\n          onClick={e => {\r\n            if (index < flashCards.length - 1) {\r\n              setFlip(false);\r\n              if (props.nextQuestion) props.nextQuestion();\r\n              setTimeout(() => setIndex(index + 1), 125);\r\n            }\r\n            if (index === flashCards.length - 1) {\r\n              setFlip(false);\r\n              if (props.nextQuestion) props.nextQuestion();\r\n              setTimeout(() => setIndex(0), 125);\r\n            }\r\n          }}\r\n        >\r\n          <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Flashcard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport Flashcard from \"../components/Flashcard\";\r\n\r\nclass LoggedOut extends Component {\r\n  state = {\r\n    set: [\r\n      {\r\n        front: \"What is Memory Cards? (Click Me)\",\r\n        back: `A place to make simple online flashcards to study with. Click create\r\n        set to start or login if you already have an account!`\r\n      }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"home-logged-out\">\r\n        <h3>Welcome to Memory Cards</h3>\r\n        <Flashcard set={this.state.set} />\r\n        <ButtonGroup style={{ marginTop: 6 }}>\r\n          <Button\r\n            component={Link}\r\n            to=\"/create\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            <CreateIcon />\r\n            Create Set\r\n          </Button>\r\n          <Button\r\n            component={Link}\r\n            to=\"/login\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </ButtonGroup>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedOut;\r\n","const quotes = [\r\n  {id: 1, quote: 'Any fool can know. The point is to understand.', author: 'Albert Einstein' },\r\n  {id: 2, quote: 'Tell me and I forget. Teach me and I remember. Involve me and I learn.', author: 'Benjamin Franklin' },\r\n  {id: 3, quote: 'All the world is a laboratory to the inquiring mind.', author: 'Martin Fisher' },\r\n  {id: 4, quote: 'It’s what you learn after you know it all that counts.', author: 'Harry S Truman' },\r\n  {id: 5, quote: 'You don’t learn to walk by following rules. You learn by doing, and by falling over.', author: 'Richard Branson' },\r\n  {id: 6, quote: 'It is not that I’m so smart. But I stay with the questions much longer.', author: 'Albert Einstein' },\r\n  {id: 7, quote: 'By three methods we may learn wisdom: First, by reflection, which is noblest; Second, by imitation, which is easiest; and third by experience, which is the bitterest.', author: 'Confucius' },\r\n  {id: 8, quote: 'The more I read, the more I acquire, the more certain I am that I know nothing.', author: 'Voltaire' },\r\n  {id: 9, quote: 'To endure uncertainty is difficult, but so are most of the other virtues.', author: 'Bertrand Russell' },\r\n  {id: 10, quote: 'That which we persist in doing becomes easier for us to do; not that the nature of the thing itself is changed, but that our power to do is increased.', author: 'Ralph Waldo Emerson' },\r\n  {id: 11, quote: 'A man who reads too much and uses his own brain too little falls into lazy habits of thinking.', author: 'Albert Einstein' },\r\n  {id: 12, quote: 'A problem well-put is half-solved', author: 'John Dewey' },\r\n  {id: 13, quote: 'The more that you read, the more things you will know. The more that you learn, the more places you’ll go.', author: 'Dr. Seuss' },\r\n  {id: 14, quote: 'All learning has an emotional base.', author: 'Plato' },\r\n  {id: 15, quote: 'Knowledge, which is acquired under compulsion, obtains no hold on the mind.', author: 'Plato' },\r\n  {id: 16, quote: 'Wisdom is learning what to overlook.', author: 'William James' },\r\n  {id: 17, quote: 'Knowing is not enough; We must apply. Willing is not enough; We must do.', author: 'Bruce Lee' },\r\n  {id: 18, quote: 'Being ignorant is not so much a shame, as being unwilling to learn.', author: 'Benjamin Franklin' },\r\n  {id: 19, quote: 'Towering genius disdains a beaten path.', author: 'Abraham Lincoln' },\r\n  {id: 20, quote: 'Never let formal education get in the way of your learning.', author: 'Mark Twain' },\r\n  {id: 21, quote: 'Development is a series of rebirths.', author: 'Maria Montessori' },\r\n  {id: 22, quote: 'Man’s mind, once stretched by a new idea, never regains its original dimensions.', author: 'Oliver Wendell Holmes' },\r\n  {id: 23, quote: 'Even the genius asks questions', author: 'Tupac Shakur' },\r\n  {id: 24, quote: 'What you think, you become. What you feel, you attract. What you imagine, you create.', author: 'Buddha' },\r\n  {id: 25, quote: 'The human mind is our fundamental resource.', author: 'John F. Kennedy' },\r\n  {id: 26, quote: 'Intelligence is the ability to adapt to change.', author: 'Stephen Hawking' },\r\n  {id: 27, quote: 'Ideas without action aren’t ideas. They’re regrets.', author: 'Steve Jobs' },\r\n  {id: 28, quote: 'Education is not the filling of a pot but the lighting of a fire.', author: 'W.B. Yeats' },\r\n  {id: 29, quote: 'No problem can withstand the assault of sustained thinking.', author: 'Voltaire' },\r\n  {id: 30, quote: 'The beautiful thing about learning is that nobody can take it away from you.', author: 'B.B. King' },\r\n  {id: 31, quote: 'An investment in knowledge pays the best interest.', author: 'Benjamin Franklin' }\r\n];\r\n\r\nexport default quotes;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport \"firebase/firestore\";\r\nimport Flashcard from \"../components/Flashcard\";\r\nimport quotes from \"./quotes/quotes\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass LoggedIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      userInfo: props.userInfo,\r\n      cardSets: [],\r\n      set: [],\r\n      type: null\r\n    };\r\n\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //get data from firestore\r\n    this.setState({ loading: true });\r\n    if (this.props.userInfo) {\r\n      const cardSets = await this.db\r\n        .collection(\"stacks\")\r\n        .where(\"uid\", \"==\", this.state.userInfo.uid)\r\n        .orderBy(\"date\", \"desc\")\r\n        .limit(3)\r\n        .get();\r\n      this.setState({\r\n        cardSets: cardSets.docs.map(doc => doc.data()),\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  showQuote = () => {\r\n    const day = new Date().getDate();\r\n    const quote = quotes.filter(quote => quote.id === day)[0];\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"75vw\",\r\n          margin: \"auto\"\r\n        }}\r\n      >\r\n        <h1 style={{ fontFamily: \"Dancing Script, cursive\", marginBottom: 6 }}>\r\n          {quote.quote}\r\n        </h1>\r\n        <small>- {quote.author}</small>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading ? (\r\n          <CircularProgress className=\"spinner\" />\r\n        ) : (\r\n          <div>\r\n            {this.showQuote()}\r\n            <div className=\"loggedIn-sets\" style={{ marginTop: \"5vh\" }}>\r\n              <h4>Recent Sets</h4>\r\n              {this.state.cardSets.length === 0 ? <h2>You have no sets! Click <Link to=\"/create\">create</Link> to get started.</h2> : null}\r\n              {this.state.cardSets.map((set, i) => (\r\n                <div\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={i}\r\n                >\r\n                  <Flashcard\r\n                    set={set.set}\r\n                    setName={set.name}\r\n                    cardStyles={this.state.userInfo.styles}\r\n                  />\r\n                  <ButtonGroup style={{ margin: \"auto\" }}>\r\n                    <Button\r\n                      component={Link}\r\n                      to={{ pathname: \"/create\", state: { set } }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      component={Link}\r\n                      to={{ pathname: \"/practice/typing\", state: { set } }}\r\n                    >\r\n                      Practice\r\n                    </Button>\r\n                    <Button\r\n                      component={Link}\r\n                      to={{ pathname: \"/practice/quiz\", state: { set } }}\r\n                    >\r\n                      Quiz\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedIn;\r\n","import React, { Component } from \"react\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport LoggedOut from \"./HomeViews/LoggedOut\";\r\nimport LoggedIn from \"./HomeViews/LoggedIn\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      loggedIn: props.loggedIn,\r\n      userInfo: props.userInfo\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading ? null : this.props.loggedIn ? (\r\n          <div>\r\n            <LoggedIn\r\n              userInfo={this.props.userInfo}\r\n              cardSets={this.props.cardSets}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <LoggedOut />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nfunction CreationModal(props) {\r\n  return (\r\n    <Dialog open={props.isOpen} onClose={e => props.modalOpen(false)}>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"front\"\r\n          type=\"text\"\r\n          label=\"Front\"\r\n          fullWidth\r\n          value={props.modCard.front}\r\n          onChange={e => props.setText(e)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          id=\"back\"\r\n          type=\"text\"\r\n          label=\"Back\"\r\n          fullWidth\r\n          value={props.modCard.back}\r\n          onChange={e => props.setText(e)}\r\n        />\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={e => {\r\n              props.saveChanges(props.modCard);\r\n              props.modalOpen(false);\r\n            }}\r\n          >\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CreationModal;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Flashcard from \"../components/Flashcard\";\r\nimport CreationModal from \"../components/CreationModal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btnGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"6px 0\"\r\n  }\r\n}));\r\n\r\nfunction SingleCard({\r\n  set,\r\n  setName,\r\n  modCard,\r\n  changeModCard,\r\n  updateSet,\r\n  saveSet,\r\n  delSet,\r\n  setText,\r\n  cardStyles\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [addModal, addModalOpen] = useState(false);\r\n  const [editModal, editModalOpen] = useState(false);\r\n\r\n  //for add card modal\r\n  const addNewCard = card => {\r\n    const newSet = [...set, card];\r\n    updateSet(newSet);\r\n  };\r\n\r\n  //for edit card modal\r\n  const editCard = card => {\r\n    if (set.length > 0) {\r\n      let newSet = [...set];\r\n      newSet[card.id] = card;\r\n      updateSet(newSet);\r\n    }\r\n  };\r\n\r\n  //for del card button\r\n  const delCard = card => {\r\n    if (set.length > 0) {\r\n      let newSet = [...set];\r\n      newSet.splice(newSet.indexOf(card), 1);\r\n      updateSet(newSet);\r\n    }\r\n  };\r\n\r\n  //get index from flashcard view??\r\n  const getIndex = () => {\r\n    let index = document.getElementById(\"index\").textContent;\r\n    index = parseInt(index.substring(0, index.indexOf(\"/\")));\r\n    return index - 1;\r\n  };\r\n\r\n  return (\r\n    <section className=\"single-card-view\">\r\n      <div>\r\n        <ButtonGroup className={classes.btnGroup}>\r\n          <Button\r\n            startIcon={<SaveAltIcon />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={e => saveSet(set)}\r\n          >\r\n            Save Set\r\n          </Button>\r\n          <Button\r\n            startIcon={<DeleteForeverIcon />}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={e => delSet()}\r\n          >\r\n            Delete Set\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n      <div>\r\n        <ButtonGroup className={classes.btnGroup}>\r\n          <Button\r\n            startIcon={<AddIcon />}\r\n            onClick={e => {\r\n              changeModCard({ front: \"\", back: \"\", id: null });\r\n              addModalOpen(true);\r\n            }}\r\n          >\r\n            New Card\r\n          </Button>\r\n          <Button\r\n            startIcon={<CreateIcon />}\r\n            onClick={e => {\r\n              if (set.length > 0) {\r\n                changeModCard(set[getIndex()]);\r\n                editModalOpen(true);\r\n              }\r\n            }}\r\n          >\r\n            Edit Card\r\n          </Button>\r\n          <Button\r\n            startIcon={<DeleteIcon />}\r\n            onClick={e => {\r\n              delCard(set[getIndex()]);\r\n            }}\r\n          >\r\n            Delete Card\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n      <Flashcard set={set} setName={setName} cardStyles={cardStyles} />\r\n      {/* Add Modal */}\r\n      <CreationModal\r\n        isOpen={addModal}\r\n        modalOpen={addModalOpen}\r\n        setText={setText}\r\n        saveChanges={addNewCard}\r\n        modCard={modCard}\r\n      />\r\n      {/* Edit Modal */}\r\n      <CreationModal\r\n        isOpen={editModal}\r\n        modalOpen={editModalOpen}\r\n        setText={setText}\r\n        saveChanges={editCard}\r\n        modCard={modCard}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SingleCard;\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Flashcard from \"./Flashcard\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"relative\"\r\n  },\r\n  edit: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    zIndex: 3\r\n  },\r\n  delete: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    zIndex: 3\r\n  }\r\n}));\r\n\r\nfunction Minicard({\r\n  id,\r\n  card,\r\n  moveCard,\r\n  findCard,\r\n  handleEdit,\r\n  handleDelCard,\r\n  cardStyles\r\n}) {\r\n  const classes = useStyles();\r\n  const originalIndex = findCard(id).index;\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: \"card\", id, originalIndex },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    }),\r\n    end: (dropResult, monitor) => {\r\n      const { id: droppedId, originalIndex } = monitor.getItem();\r\n      const didDrop = monitor.didDrop();\r\n      if (!didDrop) {\r\n        moveCard(droppedId, originalIndex);\r\n      }\r\n    }\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: \"card\",\r\n    canDrop: () => false,\r\n    hover({ id: draggedId }) {\r\n      if (draggedId !== id) {\r\n        const { index: overIndex } = findCard(id);\r\n        moveCard(draggedId, overIndex);\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div ref={node => drag(drop(node))} style={{ opacity: isDragging ? 0 : 1 }}>\r\n      <Flashcard\r\n        set={[card]}\r\n        cardStyles={{ ...cardStyles, width: \"150px\", height: \"150px\" }}\r\n        indexStyles={{ display: \"none\" }}\r\n        arrowStyles={{ display: \"none\" }}\r\n      />\r\n      <IconButton\r\n        size=\"small\"\r\n        className={classes.edit}\r\n        onClick={e => handleEdit(card)}\r\n      >\r\n        <CreateIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        size=\"small\"\r\n        className={classes.delete}\r\n        onClick={e => handleDelCard(card)}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Minicard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport Minicard from \"../components/Minicard\";\r\nimport CreationModal from \"../components/CreationModal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"relative\"\r\n  },\r\n  edit: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    zIndex: 3\r\n  },\r\n  delete: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    zIndex: 3\r\n  },\r\n  btnGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"6px 0\"\r\n  }\r\n}));\r\n\r\nfunction MultiCard({\r\n  set,\r\n  updateSet,\r\n  saveSet,\r\n  delSet,\r\n  changeModCard,\r\n  setText,\r\n  modCard,\r\n  cardStyles\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [cards, setCards] = useState(set);\r\n\r\n  //Modals\r\n  const [addModal, addModalOpen] = useState(false);\r\n  const [editModal, editModalOpen] = useState(false);\r\n\r\n  //componentdidupdate, updates parent set with child cards(cards doesnt change)\r\n  useEffect(() => {\r\n    updateSet(cards);\r\n  }, [cards, updateSet]);\r\n\r\n  //updates state when card moves\r\n  const moveCard = (id, atIndex) => {\r\n    const { card, index } = findCard(id);\r\n    setCards(\r\n      update(cards, {\r\n        $splice: [\r\n          [index, 1],\r\n          [atIndex, 0, card]\r\n        ]\r\n      })\r\n    );\r\n  };\r\n\r\n  //called for everycard onLoad and on an action, used to get order\r\n  const findCard = id => {\r\n    const card = cards.filter(card => `${card.id}` === id)[0];\r\n    return {\r\n      card,\r\n      index: cards.indexOf(card)\r\n    };\r\n  };\r\n\r\n  //accept drop of type card\r\n  const [, drop] = useDrop({ accept: \"card\" });\r\n\r\n  //for add button\r\n  const handleAdd = () => {\r\n    let id = null;\r\n    //get unique id\r\n    if (cards.length !== 0) {\r\n      let num = 0;\r\n      while (!id) {\r\n        // eslint-disable-next-line no-loop-func\r\n        const result = cards.filter(card => card.id === num);\r\n        if (result.length === 0) {\r\n          id = num;\r\n        } else {\r\n          num++;\r\n        }\r\n      }\r\n    } else {\r\n      id = 0;\r\n    }\r\n    changeModCard({ front: \"\", back: \"\", id });\r\n    addModalOpen(true);\r\n  };\r\n\r\n  //for modal add button\r\n  const saveAdd = card => {\r\n    setCards([...cards, card]);\r\n  };\r\n\r\n  //for edit button\r\n  const handleEdit = card => {\r\n    const index = cards.indexOf(card);\r\n    changeModCard(cards[index]);\r\n    editModalOpen(true);\r\n  };\r\n\r\n  //for modal edit button\r\n  const saveEdit = card => {\r\n    let newSet = [...cards];\r\n    const oldCard = newSet.filter(el => el.id === card.id)[0];\r\n    newSet[newSet.indexOf(oldCard)] = card;\r\n    setCards(newSet);\r\n  };\r\n\r\n  //for del card button\r\n  const handleDelCard = card => {\r\n    let newSet = [...cards];\r\n    newSet.splice(newSet.indexOf(card), 1);\r\n    setCards(newSet);\r\n  };\r\n\r\n  return (\r\n    <section className=\"multi-card-view\">\r\n      <div>\r\n        <ButtonGroup className={classes.btnGroup}>\r\n          <Button variant=\"contained\" onClick={e => handleAdd()}>\r\n            <AddIcon /> New Card\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={e => saveSet(cards)}\r\n          >\r\n            <SaveAltIcon /> Save Set\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={e => delSet()}>\r\n            <DeleteForeverIcon /> Delete Set\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n      <div className=\"multi-card-dnd\" ref={drop}>\r\n        {cards.map(card => (\r\n          <div className={classes.root} key={card.id}>\r\n            <Minicard\r\n              id={`${card.id}`}\r\n              card={card}\r\n              moveCard={moveCard}\r\n              findCard={findCard}\r\n              handleEdit={handleEdit}\r\n              handleDelCard={handleDelCard}\r\n              cardStyles={cardStyles}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* Add Modal */}\r\n      <CreationModal\r\n        isOpen={addModal}\r\n        modalOpen={addModalOpen}\r\n        setText={setText}\r\n        saveChanges={saveAdd}\r\n        modCard={modCard}\r\n      />\r\n      {/* Edit Modal */}\r\n      <CreationModal\r\n        isOpen={editModal}\r\n        modalOpen={editModalOpen}\r\n        setText={setText}\r\n        saveChanges={saveEdit}\r\n        modCard={modCard}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MultiCard;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction SignUpModal({ set, setName, isOpen, closeModal, loggedIn }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passConfirm, setPassConfirm] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const resetText = () => {\r\n    setUserName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setPassConfirm(\"\");\r\n    setError(\"\");\r\n  };\r\n\r\n  const signUpUser = async () => {\r\n    if (password === passConfirm) {\r\n      try {\r\n        const userCredentials = await firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password);\r\n        await firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userCredentials.user.uid)\r\n          .set({\r\n            name: userName,\r\n            uid: userCredentials.user.uid,\r\n            styles: {\r\n              backgroundColor: \"#fff\",\r\n              color: \"#000000\"\r\n            }\r\n          });\r\n        if (set) {\r\n          await firebase\r\n            .firestore()\r\n            .collection(\"stacks\")\r\n            .add({\r\n              name: setName,\r\n              uid: userCredentials.user.uid,\r\n              set\r\n            });\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderRedirect = () => {\r\n    if (loggedIn && !set) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      onClose={e => {\r\n        resetText();\r\n        closeModal(false);\r\n      }}\r\n    >\r\n      <DialogTitle>Create Account</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          type=\"text\"\r\n          label=\"Username\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={userName}\r\n          onChange={e => setUserName(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          type=\"email\"\r\n          label=\"E-Mail\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          type=\"password\"\r\n          label=\"Repeat Password\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={passConfirm}\r\n          onChange={e => setPassConfirm(e.target.value)}\r\n        />\r\n        <Typography>{error}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={e => {\r\n            signUpUser();\r\n          }}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        {renderRedirect()}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SignUpModal;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./firebase/firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport Backend from \"react-dnd-multi-backend\";\r\nimport HTML5toTouch from \"react-dnd-multi-backend/dist/esm/HTML5toTouch\";\r\nimport SingleCard from \"./CreationViews/SingleCard\";\r\nimport MultiCard from \"./CreationViews/MultiCard\";\r\nimport SignUpModal from \"./components/SignUpModal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport BorderAllIcon from \"@material-ui/icons/BorderAll\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass Creation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      userInfo: props.userInfo,\r\n      cardSets: [],\r\n      setName: \"\",\r\n      initialSet: [],\r\n      set: [],\r\n      modCard: { front: \"\", back: \"\", id: null },\r\n      singView: true,\r\n      saveModal: false,\r\n      signUpModal: false\r\n    };\r\n\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    //check for default set\r\n    if (this.props.location.state) {\r\n      const { set } = this.props.location.state;\r\n      this.updateSet(set.set);\r\n      this.setState({\r\n        setName: set.name,\r\n        initialSet: set.set.map((card, i) => ({ ...card, id: i }))\r\n      });\r\n    }\r\n\r\n    //get data from firestore\r\n    if (this.props.loggedIn) {\r\n      const cardSets = await this.db\r\n        .collection(\"stacks\")\r\n        .where(\"uid\", \"==\", this.state.userInfo.uid)\r\n        .get();\r\n      this.setState({\r\n        cardSets: cardSets.docs.map(doc => doc.data()),\r\n        loading: false\r\n      });\r\n    } else {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  changeModCard = card => {\r\n    this.setState({ modCard: card });\r\n  };\r\n\r\n  //Helper\r\n  updateSet = set => {\r\n    const newSet = set.map((card, i) => ({ ...card, id: i }));\r\n    this.setState({ set: newSet });\r\n  };\r\n\r\n  //for modCard modal text\r\n  setText = e => {\r\n    if (e.target.id === \"front\") {\r\n      this.setState({\r\n        modCard: {\r\n          front: e.target.value,\r\n          back: this.state.modCard.back,\r\n          id: this.state.modCard.id\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        modCard: {\r\n          front: this.state.modCard.front,\r\n          back: e.target.value,\r\n          id: this.state.modCard.id\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  //for choosing set\r\n  handleSetSelect = e => {\r\n    const setName = e.target.value;\r\n    if (setName !== \"\") {\r\n      const set = this.state.cardSets.filter(set => set.name === setName)[0]\r\n        .set;\r\n      this.updateSet(set);\r\n      this.setState({\r\n        setName,\r\n        singView: true,\r\n        initialSet: set.map((card, i) => ({ ...card, id: i }))\r\n      });\r\n    } else {\r\n      this.setState({ setName, singView: true, set: [] });\r\n    }\r\n  };\r\n\r\n  //for signUpModal click off\r\n  signUpModalClose = close => {\r\n    this.setState({\r\n      signUpModal: close,\r\n      setName: \"\"\r\n    });\r\n  };\r\n\r\n  //card set conditional\r\n  renderCardSets = () => {\r\n    if (this.state.cardSets.length > 0) {\r\n      return (\r\n        <FormControl>\r\n          <InputLabel>Sets</InputLabel>\r\n          <Select\r\n            native\r\n            value={this.state.setName}\r\n            onChange={e => this.handleSetSelect(e)}\r\n          >\r\n            <option value=\"\"></option>\r\n            {this.state.cardSets.map(set => (\r\n              <option value={set.name} key={set.name}>\r\n                {set.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      );\r\n    }\r\n  };\r\n\r\n  //save new set to database (from modal)\r\n  saveNewSet = async set => {\r\n    if (this.state.userInfo !== \"\") {\r\n      set = set.map(card => ({ front: card.front, back: card.back }));\r\n      try {\r\n        await this.db.collection(\"stacks\").add({\r\n          name: this.state.setName,\r\n          uid: this.state.userInfo.uid,\r\n          date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n          set\r\n        });\r\n        this.setState({\r\n          cardSets: [\r\n            ...this.state.cardSets,\r\n            { name: this.state.setName, set, uid: this.state.userInfo.uid }\r\n          ]\r\n        });\r\n        alert(\"Set successfully added.\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      this.setState({ signUpModal: true });\r\n    }\r\n  };\r\n\r\n  //save existing set to database\r\n  saveSet = async set => {\r\n    set = set.map(card => ({ front: card.front, back: card.back }));\r\n    let notSame = false;\r\n    const initSet = this.state.initialSet;\r\n    //check is changes were made to set\r\n    if (initSet.length !== set.length) {\r\n      notSame = true;\r\n    } else {\r\n      set.forEach((card, i) => {\r\n        if (card.front !== initSet[i].front || card.back !== initSet[i].back) {\r\n          notSame = true;\r\n        }\r\n      });\r\n    }\r\n    //save to database then update state if editing set/ open modal if adding set\r\n    if (notSame) {\r\n      if (this.state.setName !== \"\") {\r\n        try {\r\n          const setQuery = await this.db\r\n            .collection(\"stacks\")\r\n            .where(\"uid\", \"==\", this.state.userInfo.uid)\r\n            .where(\"name\", \"==\", this.state.setName)\r\n            .get();\r\n          const fbSetName = setQuery.docs[0].id;\r\n          const dataSet = this.db.collection(\"stacks\").doc(fbSetName);\r\n          await dataSet.update({\r\n            set,\r\n            date: firebase.firestore.Timestamp.fromDate(new Date())\r\n          });\r\n          this.setState({\r\n            initialSet: set,\r\n            cardSets: this.state.cardSets.map(el => {\r\n              if (el.name === this.state.setName) {\r\n                el.set = set;\r\n              }\r\n              return el;\r\n            })\r\n          });\r\n          alert(\"Set successfully updated.\");\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      } else {\r\n        this.setState({ saveModal: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  //del set from database\r\n  delSet = async () => {\r\n    const setName = this.state.setName;\r\n    if (setName !== \"\") {\r\n      try {\r\n        const setQuery = await this.db\r\n          .collection(\"stacks\")\r\n          .where(\"uid\", \"==\", this.state.userInfo.uid)\r\n          .where(\"name\", \"==\", setName)\r\n          .get();\r\n        const fbSetName = setQuery.docs[0].id;\r\n        await this.db\r\n          .collection(\"stacks\")\r\n          .doc(fbSetName)\r\n          .delete();\r\n        this.setState({\r\n          set: [],\r\n          setName: \"\",\r\n          initialSet: [],\r\n          cardSets: this.state.cardSets.filter(set => set.name !== setName),\r\n          singView: true\r\n        });\r\n        alert(\"Set successfully deleted.\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  renderView = () => {\r\n    if (this.state.singView) {\r\n      return (\r\n        <SingleCard\r\n          set={this.state.set}\r\n          setName={this.state.setName}\r\n          modCard={this.state.modCard}\r\n          updateSet={this.updateSet}\r\n          saveSet={this.saveSet}\r\n          delSet={this.delSet}\r\n          changeModCard={this.changeModCard}\r\n          setText={this.setText}\r\n          cardStyles={this.state.userInfo.styles}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <MultiCard\r\n          set={this.state.set}\r\n          modCard={this.state.modCard}\r\n          updateSet={this.updateSet}\r\n          saveSet={this.saveSet}\r\n          delSet={this.delSet}\r\n          changeModCard={this.changeModCard}\r\n          setText={this.setText}\r\n          cardStyles={this.state.userInfo.styles}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DndProvider backend={Backend} options={HTML5toTouch}>\r\n        {!this.state.loading ? (\r\n          <section className=\"creation-page\">\r\n            <div className=\"creation-page-settings\">\r\n              {this.renderCardSets()}\r\n              <ButtonGroup style={{ margin: 12 }}>\r\n                <Button\r\n                  variant={this.state.singView ? \"contained\" : null}\r\n                  color={this.state.singView ? \"primary\" : null}\r\n                  onClick={e => this.setState({ singView: true })}\r\n                >\r\n                  <CheckBoxOutlineBlankIcon />\r\n                </Button>\r\n                <Button\r\n                  variant={this.state.singView ? null : \"contained\"}\r\n                  color={this.state.singView ? null : \"primary\"}\r\n                  onClick={e => this.setState({ singView: false })}\r\n                >\r\n                  <BorderAllIcon />\r\n                </Button>\r\n              </ButtonGroup>\r\n            </div>\r\n            {this.renderView()}\r\n            {/* Modals */}\r\n            <SignUpModal\r\n              isOpen={this.state.signUpModal}\r\n              closeModal={this.signUpModalClose}\r\n              loggedIn={this.props.loggedIn}\r\n              set={this.state.set}\r\n              setName={this.state.setName}\r\n            />\r\n            <Dialog\r\n              open={this.state.saveModal}\r\n              onClose={() => this.setState({ saveModal: false, setName: \"\" })}\r\n            >\r\n              <DialogContent>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  label=\"Set Name\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  value={this.state.setName}\r\n                  onChange={e => this.setState({ setName: e.target.value })}\r\n                ></TextField>\r\n                <DialogActions>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={e => {\r\n                      if (this.state.setName !== \"\") {\r\n                        let alreadyExists = false;\r\n                        this.state.cardSets.forEach(set => {\r\n                          if (set.name === this.state.setName)\r\n                            alreadyExists = true;\r\n                        });\r\n                        if (!alreadyExists) {\r\n                          this.saveNewSet(this.state.set);\r\n                          this.setState({ saveModal: false });\r\n                        } else {\r\n                          console.log(\"name already exists\");\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </DialogActions>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </section>\r\n        ) : (\r\n          <CircularProgress className=\"spinner\" />\r\n        )}\r\n      </DndProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Creation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst cardStyles = {\r\n  margin: 8,\r\n  cursor: \"pointer\",\r\n  textDecoration: \"none\"\r\n};\r\n\r\nfunction PracticeHome() {\r\n  return (\r\n    <section className=\"practice-page\">\r\n      <Card component={Link} to={\"/practice/standard\"} style={cardStyles}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h3\" color=\"primary\">\r\n            Standard\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\">\r\n            Just click and flip! The standard way to use Flashcards.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Card component={Link} to={\"/practice/typing\"} style={cardStyles}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h3\" color=\"primary\">\r\n            Typing\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\">\r\n            Type the answer instead of flipping.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Card component={Link} to={\"/practice/quiz\"} style={cardStyles}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h3\" color=\"primary\">\r\n            Quiz\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\">\r\n            Test your knowledge!\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PracticeHome;\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Flashcard from \"../components/Flashcard\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nfunction Standard({ cardSets, userInfo }) {\r\n  const [set, changeSet] = useState([]);\r\n  const [setName, changeSetName] = useState(\"\");\r\n  const [isShuffled, setShuffle] = useState(true);\r\n\r\n  const handleSetSelect = e => {\r\n    const setName = e.target.value;\r\n    if (setName !== \"\") {\r\n      const newSet = cardSets.filter(set => set.name === setName)[0].set;\r\n\r\n      changeSet(newSet);\r\n      changeSetName(setName);\r\n    } else {\r\n      changeSet([]);\r\n      changeSetName(\"\");\r\n    }\r\n  };\r\n\r\n  const renderCardSets = () => {\r\n    if (cardSets.length > 0) {\r\n      return (\r\n        <FormControl>\r\n          <InputLabel>Sets</InputLabel>\r\n          <Select native value={setName} onChange={e => handleSetSelect(e)}>\r\n            <option value=\"\"></option>\r\n            {cardSets.map(set => (\r\n              <option value={set.name} key={set.name}>\r\n                {set.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"practice-standard\">\r\n      <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n        {renderCardSets()}\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={isShuffled}\r\n              onChange={e => setShuffle(!isShuffled)}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Shuffle\"\r\n          style={{ margin: 0 }}\r\n        />\r\n      </div>\r\n      <Flashcard\r\n        set={isShuffled ? _.shuffle(set) : set}\r\n        setName={setName}\r\n        cardStyles={userInfo.styles}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Standard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport Flashcard from \"../components/Flashcard\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nfunction Typing({ cardSets, userInfo }) {\r\n  const [ansCount, setCount] = useState(0);\r\n  const [set, changeSet] = useState([]);\r\n  const [setName, changeSetName] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [isShuffled, setShuffle] = useState(true);\r\n  const [shufSet, changeShufSet] = useState([]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      const set = location.state.set.set;\r\n      changeSet(set);\r\n      changeShufSet(_.shuffle(set));\r\n      changeSetName(location.state.set.name);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const checkAnswer = () => {\r\n    if (setName !== \"\" && answer !== \"\") {\r\n      const back = document.querySelector(\".back\").textContent;\r\n      const rightAnswer = back.replace(/\\s+/g, \"\").toLowerCase();\r\n      const userAnswer = answer.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n      if (rightAnswer === userAnswer) {\r\n        console.log(\"right answer\");\r\n        document.querySelector(\".go-right\").click();\r\n      } else {\r\n        setCount(ansCount + 1);\r\n        console.log(\"wrong answer\");\r\n        console.log([userAnswer, rightAnswer]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    setCount(0);\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  const handleSetSelect = e => {\r\n    const setName = e.target.value;\r\n    if (setName !== \"\") {\r\n      const newSet = cardSets.filter(set => set.name === setName)[0].set;\r\n\r\n      changeSet(newSet);\r\n      changeShufSet(_.shuffle(newSet));\r\n      changeSetName(setName);\r\n    } else {\r\n      changeSet([]);\r\n      changeShufSet([]);\r\n      changeSetName(\"\");\r\n    }\r\n  };\r\n\r\n  const renderCardSets = () => {\r\n    if (cardSets.length > 0) {\r\n      return (\r\n        <FormControl>\r\n          <InputLabel>Sets</InputLabel>\r\n          <Select native value={setName} onChange={e => handleSetSelect(e)}>\r\n            <option value=\"\"></option>\r\n            {cardSets.map(set => (\r\n              <option value={set.name} key={set.name}>\r\n                {set.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"practice-typing\">\r\n      <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n        {renderCardSets()}\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={isShuffled}\r\n              onChange={e => {\r\n                changeShufSet(_.shuffle(set));\r\n                setShuffle(!isShuffled);\r\n              }}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Shuffle\"\r\n          style={{ margin: 0 }}\r\n        />\r\n      </div>\r\n      <Flashcard\r\n        set={isShuffled ? shufSet : set}\r\n        setName={setName}\r\n        cardStyles={{\r\n          ...userInfo.styles,\r\n          cursor: ansCount < 1 ? \"default\" : \"pointer\"\r\n        }}\r\n        flipCardStyles={{ cursor: ansCount < 1 ? \"default\" : \"pointer\" }}\r\n        noFlip={ansCount < 1 ? true : false}\r\n        nextQuestion={nextQuestion}\r\n      />\r\n      <Paper style={{ padding: 4 }}>\r\n        <TextField\r\n          error={ansCount > 0 ? true : false}\r\n          helperText={ansCount < 1 ? null : \"Click card to show answer\"}\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          label=\"Answer\"\r\n          size=\"small\"\r\n          value={answer}\r\n          onChange={e => setAnswer(e.target.value)}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) checkAnswer();\r\n          }}\r\n        />\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ padding: 6 }}\r\n          onClick={e => checkAnswer()}\r\n        >\r\n          <CheckIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Typing;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport Flashcard from \"../components/Flashcard\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Quiz({ cardSets, userInfo }) {\r\n  const [set, changeSet] = useState([]);\r\n  const [setName, changeSetName] = useState(\"\");\r\n\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [report, setReport] = useState([]);\r\n\r\n  const [isShuffled, setShuffle] = useState(true);\r\n  const [shufSet, changeShufSet] = useState([]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      const set = location.state.set.set;\r\n      changeSet(set);\r\n      changeShufSet(_.shuffle(set));\r\n      changeSetName(location.state.set.name);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const saveAnswer = () => {\r\n    if (setName !== \"\" && answer !== \"\") {\r\n      //get data\r\n      const front = document.querySelector(\".front\").textContent;\r\n      const back = document.querySelector(\".back\").textContent;\r\n      const rightAnswer = back.replace(/\\s+/g, \"\").toLowerCase();\r\n      const userAnswer = answer.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n      //make object for report\r\n      const qna = {\r\n        front,\r\n        back,\r\n        userAnswer,\r\n        correct: rightAnswer === userAnswer ? true : false\r\n      };\r\n\r\n      const newReport = [...report, qna];\r\n\r\n      setReport(newReport);\r\n      setAnswer(\"\");\r\n\r\n      document.querySelector(\".go-right\").click();\r\n    }\r\n  };\r\n\r\n  const handleSetSelect = e => {\r\n    const setName = e.target.value;\r\n    if (setName !== \"\") {\r\n      const newSet = cardSets.filter(set => set.name === setName)[0].set;\r\n\r\n      changeSet(newSet);\r\n      changeShufSet(_.shuffle(newSet));\r\n      changeSetName(setName);\r\n      setReport([]);\r\n    } else {\r\n      reset();\r\n    }\r\n  };\r\n\r\n  //helper\r\n  const reset = () => {\r\n    changeSet([]);\r\n    changeShufSet([]);\r\n    changeSetName(\"\");\r\n    setReport([]);\r\n  };\r\n\r\n  const renderCardSets = () => {\r\n    if (cardSets.length > 0) {\r\n      return (\r\n        <FormControl>\r\n          <InputLabel>Sets</InputLabel>\r\n          <Select native value={setName} onChange={e => handleSetSelect(e)}>\r\n            <option value=\"\"></option>\r\n            {cardSets.map(set => (\r\n              <option value={set.name} key={set.name}>\r\n                {set.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderReport = () => {\r\n    const score = Math.round(\r\n      (report.filter(qna => qna.correct).length / report.length) * 100\r\n    );\r\n    return (\r\n      <div>\r\n        <div>Score: {score}%</div>\r\n        {report.map((qna, i) => (\r\n          <Card variant=\"outlined\" key={i}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Question: {qna.front}</Typography>\r\n              <Typography variant=\"body2\">Answer: {qna.back}</Typography>\r\n              <Typography variant=\"body2\">\r\n                Your Answer: {qna.userAnswer}\r\n              </Typography>\r\n              <Typography style={{ color: qna.correct ? \"green\" : \"red\" }}>\r\n                {qna.correct ? \"Correct!\" : \"Incorrect.\"}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n        <Button onClick={e => reset()} color=\"primary\">\r\n          Close Report\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"practice-quiz\">\r\n      {report.length === set.length && set.length > 0 ? (\r\n        renderReport()\r\n      ) : (\r\n        <div className=\"practice-quiz\">\r\n          <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n            {renderCardSets()}\r\n            {report.length <= 0 ? (\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={isShuffled}\r\n                    onChange={e => {\r\n                      changeShufSet(_.shuffle(set));\r\n                      setShuffle(!isShuffled);\r\n                    }}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Shuffle\"\r\n                style={{ margin: 0 }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <Flashcard\r\n            set={isShuffled ? shufSet : set}\r\n            setName={setName}\r\n            cardStyles={{\r\n              ...userInfo.styles,\r\n              cursor: \"default\"\r\n            }}\r\n            noFlip={true}\r\n            arrowStyles={{ display: \"none\" }}\r\n          />\r\n          <Paper style={{ padding: 4 }}>\r\n            <TextField\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              label=\"Answer\"\r\n              size=\"small\"\r\n              value={answer}\r\n              onChange={e => setAnswer(e.target.value)}\r\n              onKeyDown={e => {\r\n                if (e.keyCode === 13) saveAnswer();\r\n              }}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ padding: 6 }}\r\n              onClick={e => saveAnswer()}\r\n            >\r\n              <CheckIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport firebase from \"./firebase/firebase\";\r\nimport \"firebase/firestore\";\r\nimport PracticeHome from \"./PracticePages/PracticeHome\";\r\nimport Standard from \"./PracticePages/Standard\";\r\nimport Typing from \"./PracticePages/Typing\";\r\nimport Quiz from \"./PracticePages/Quiz\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass Practice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      userInfo: props.userInfo,\r\n      cardSets: []\r\n    };\r\n\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    //get data from firestore\r\n    if (this.props.userInfo) {\r\n      const cardSets = await this.db\r\n        .collection(\"stacks\")\r\n        .where(\"uid\", \"==\", this.state.userInfo.uid)\r\n        .get();\r\n      this.setState({\r\n        cardSets: cardSets.docs.map(doc => doc.data()),\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (!this.props.loggedIn) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"practice-routes\">\r\n        {this.renderRedirect()}\r\n        {!this.state.loading ? (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/practice\"\r\n              render={props => (\r\n                <PracticeHome {...props} key={window.location.pathname} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/practice/standard\"\r\n              render={props => (\r\n                <Standard\r\n                  {...props}\r\n                  userInfo={this.state.userInfo}\r\n                  cardSets={this.state.cardSets}\r\n                  key={window.location.pathname}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/practice/typing\"\r\n              render={props => (\r\n                <Typing\r\n                  {...props}\r\n                  userInfo={this.state.userInfo}\r\n                  cardSets={this.state.cardSets}\r\n                  key={window.location.pathname}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/practice/quiz\"\r\n              render={props => (\r\n                <Quiz\r\n                  {...props}\r\n                  userInfo={this.state.userInfo}\r\n                  cardSets={this.state.cardSets}\r\n                  key={window.location.pathname}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        ) : (\r\n          <CircularProgress className=\"spinner\" />\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Practice;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport \"firebase/auth\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nfunction ResetPassModal({ isOpen, closeModal }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [sent, setSent] = useState(\"\");\r\n\r\n  const resetText = () => {\r\n    setEmail(\"\");\r\n    setError(\"\");\r\n    setSent(\"\");\r\n  };\r\n\r\n  const resetPass = async () => {\r\n    try {\r\n      await firebase.auth().sendPasswordResetEmail(email);\r\n      setSent(\"E-Mail sent.\");\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      onClose={e => {\r\n        resetText();\r\n        closeModal(false);\r\n      }}\r\n    >\r\n      <DialogContent>\r\n        Reset Password\r\n        <TextField\r\n          type=\"email\"\r\n          margin=\"dense\"\r\n          label=\"Confirm E-Mail\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <Typography>{sent}</Typography>\r\n        <Typography variant=\"caption\">{error}</Typography>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={e => resetPass()}\r\n          >\r\n            Send Reset E-mail\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ResetPassModal;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebase from \"./firebase/firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport ResetPassModal from \"./components/ResetPassModal\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = {\r\n  profile: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2, minmax(150px, 1fr))\",\r\n    gridRowGap: 16\r\n  },\r\n  colorRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  color: {\r\n    width: 50,\r\n    height: 50,\r\n    margin: 4,\r\n    cursor: \"pointer\"\r\n  }\r\n};\r\n\r\nconst colors = [\"#fff\", \"#ffe08a\", \"#dfffc7\", \"#c7ffff\", \"#ddcfff\", \"#555555\"];\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { name, styles, uid } = _.cloneDeep(props.userInfo);\r\n    this.state = {\r\n      unsaved: false,\r\n      resetModal: false,\r\n      name,\r\n      styles,\r\n      uid\r\n    };\r\n  }\r\n\r\n  saveChanges = async () => {\r\n    if (this.state.unsaved) {\r\n      try {\r\n        const userInfo = firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(this.state.uid);\r\n        await userInfo.set(\r\n          {\r\n            name: this.state.name,\r\n            styles: this.state.styles,\r\n            uid: this.state.uid\r\n          },\r\n          { merge: true }\r\n        );\r\n        this.setState({ unsaved: false });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      console.log(\"no unsaved changes\");\r\n    }\r\n  };\r\n\r\n  setColor = e => {\r\n    let styles = this.state.styles;\r\n    styles.backgroundColor = e.target.id;\r\n    if (e.target.id === \"#555555\") {\r\n      styles.color = \"#fff\";\r\n    } else {\r\n      styles.color = \"#000000\";\r\n    }\r\n    this.setState({ unsaved: true, styles });\r\n  };\r\n\r\n  renderColors = () => {\r\n    if (this.state.styles) {\r\n      const activeColor = this.state.styles.backgroundColor;\r\n      return colors.map(color => (\r\n        <Paper\r\n          key={color}\r\n          variant=\"outlined\"\r\n          id={color}\r\n          onClick={e => this.setColor(e)}\r\n          style={{\r\n            ...styles.color,\r\n            backgroundColor: color,\r\n            border: activeColor === color ? \"3px solid black\" : null\r\n          }}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  renderRedirect = () => {\r\n    if (!this.props.loggedIn) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"profile-page\">\r\n        {this.renderRedirect()}\r\n        <Card>\r\n          <CardContent style={styles.profile}>\r\n            <p>Username</p>\r\n            <TextField\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              value={this.state.name}\r\n              onChange={e =>\r\n                this.setState({ name: e.target.value, unsaved: true })\r\n              }\r\n            />\r\n            <p>Flashcard Color</p>\r\n            <div className=\"color-picker\" style={styles.colorRoot}>\r\n              {this.renderColors()}\r\n            </div>\r\n            <p>Password</p>\r\n            <Button\r\n              style={{ width: 100 }}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={e => this.setState({ resetModal: true })}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={this.state.unsaved ? false : true}\r\n          onClick={e => this.saveChanges()}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n        <ResetPassModal\r\n          isOpen={this.state.resetModal}\r\n          closeModal={close => this.setState({ resetModal: false })}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebase from \"./firebase/firebase\";\r\nimport \"firebase/auth\";\r\nimport SignUpModal from \"./components/SignUpModal\";\r\nimport ResetPassModal from \"./components/ResetPassModal\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      email: null,\r\n      pass: null,\r\n      error: null,\r\n      signUpModal: false,\r\n      loggedIn: props.loggedIn\r\n    };\r\n  }\r\n\r\n  handleEmail = value => {\r\n    this.setState({ email: value });\r\n  };\r\n\r\n  handlePass = value => {\r\n    this.setState({ pass: value });\r\n  };\r\n\r\n  handleLogin = async () => {\r\n    try {\r\n      await firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(this.state.email, this.state.pass);\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.setState({\r\n        error: err.message,\r\n        pass: \"\",\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEnter = code => {\r\n    if (code === 13) {\r\n      this.handleLogin();\r\n    }\r\n  };\r\n\r\n  renderRedirect = () => {\r\n    if (this.props.loggedIn === true) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"login-page\">\r\n        {this.renderRedirect()}\r\n        {this.state.loading ? null : (\r\n          <div>\r\n            <Card>\r\n              <form onKeyDown={e => this.handleEnter(e.keyCode)}>\r\n                <CardContent>\r\n                  <Typography>Memory Cards</Typography>\r\n                  <TextField\r\n                    autoFocus\r\n                    type=\"email\"\r\n                    margin=\"dense\"\r\n                    label=\"E-Mail\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={this.state.email}\r\n                    onChange={e => this.handleEmail(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    type=\"password\"\r\n                    margin=\"dense\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={this.state.pass}\r\n                    onChange={e => this.handlePass(e.target.value)}\r\n                  />\r\n                  <Typography variant=\"caption\">{this.state.error}</Typography>\r\n                </CardContent>\r\n                <CardActions style={{ flexDirection: \"row-reverse\" }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={e => this.handleLogin()}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </CardActions>\r\n              </form>\r\n            </Card>\r\n            <div>\r\n              Don't have an account?\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={e => this.setState({ signUpModal: true })}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              Forgot password?\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={e => this.setState({ resetModal: true })}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </div>\r\n            <SignUpModal\r\n              isOpen={this.state.signUpModal}\r\n              closeModal={close => this.setState({ signUpModal: close })}\r\n              loggedIn={this.props.loggedIn}\r\n            />\r\n            <ResetPassModal\r\n              isOpen={this.state.resetModal}\r\n              closeModal={close => this.setState({ resetModal: close })}\r\n            />\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport \"firebase/auth\";\r\nimport SignUpModal from \"./SignUpModal\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport FilterNoneIcon from \"@material-ui/icons/FilterNone\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nfunction Navbar({ loggedIn, signedOut, userInfo }) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [signUpModal, setSignUpModal] = useState(false);\r\n  const matches = useMediaQuery(\"(min-width:500px)\");\r\n\r\n  const handleUserClick = target => {\r\n    setAnchorEl(target);\r\n  };\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      await firebase.auth().signOut();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const renderRedirect = () => {\r\n    if (signedOut && window.location.pathname !== \"/\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar style={{ justifyContent: \"flex-end\" }}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          component={Link}\r\n          to=\"/\"\r\n          style={{ marginRight: \"auto\" }}\r\n        >\r\n          <HomeIcon />\r\n        </IconButton>\r\n        {matches ? (\r\n          <Button color=\"inherit\" component={Link} to=\"/create\">\r\n            Create\r\n          </Button>\r\n        ) : (\r\n          <IconButton color=\"inherit\" component={Link} to=\"/create\">\r\n            <CreateIcon />\r\n          </IconButton>\r\n        )}\r\n        {renderRedirect()}\r\n        {loggedIn ? (\r\n          <div>\r\n            {matches ? (\r\n              <Button color=\"inherit\" component={Link} to=\"/practice\">\r\n                Practice\r\n              </Button>\r\n            ) : (\r\n              <IconButton color=\"inherit\" component={Link} to=\"/practice\">\r\n                <FilterNoneIcon />\r\n              </IconButton>\r\n            )}\r\n            <Button\r\n              startIcon={<AccountCircleIcon />}\r\n              color=\"inherit\"\r\n              variant=\"outlined\"\r\n              onClick={e => handleUserClick(e.currentTarget)}\r\n            >\r\n              {userInfo.name ? userInfo.name : \"...\"}\r\n            </Button>\r\n            <Menu\r\n              anchorEl={loggedIn ? anchorEl : null}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={e => setAnchorEl(null)}\r\n            >\r\n              <MenuItem\r\n                component={Link}\r\n                to=\"/settings\"\r\n                onClick={e => setAnchorEl(null)}\r\n              >\r\n                Settings\r\n              </MenuItem>\r\n              <MenuItem onClick={e => signOut()}>Logout</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        ) : (\r\n          <ButtonGroup color=\"inherit\" variant=\"outlined\">\r\n            <Button onClick={e => setSignUpModal(true)}>Sign Up</Button>\r\n            <Button component={Link} to=\"/login\">\r\n              Login\r\n            </Button>\r\n            <SignUpModal\r\n              isOpen={signUpModal}\r\n              closeModal={setSignUpModal}\r\n              loggedIn={loggedIn}\r\n            />\r\n          </ButtonGroup>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase/firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Switch, Route, Redirect, HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Creation from \"./Creation\";\nimport Practice from \"./Practice\";\nimport Profile from \"./Profile\";\nimport Login from \"./Login\";\nimport Navbar from \"./components/Navbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0e68cf\"\n    },\n    secondary: {\n      main: \"#3d3d3d\"\n    }\n  }\n});\n\nclass App extends Component {\n  state = {\n    loading: false,\n    loggedIn: \"pending\",\n    userInfo: \"\",\n    verified: false //keep?\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.unsub = firebase.auth().onAuthStateChanged(async user => {\n      this.setState({ loading: true });\n      if (user) {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(user.uid)\n          .onSnapshot(doc => {\n            this.setState({\n              loggedIn: true,\n              signedOut: false,\n              userInfo: doc.data(),\n              email: user.email,\n              loading: false\n            });\n          });\n      } else {\n        if (this.state.userInfo !== \"\") {\n          this.setState({\n            signedOut: true,\n            userInfo: \"\"\n          });\n        }\n        this.setState({\n          loggedIn: false,\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsub();\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <ThemeProvider theme={theme}>\n          {!this.state.loading ? (\n            <div className=\"App\">\n              <Navbar\n                loggedIn={this.state.loggedIn}\n                userInfo={this.state.userInfo}\n                signedOut={this.state.signedOut}\n              />\n\n              <Switch>\n                <Route\n                  path=\"/login\"\n                  render={props => (\n                    <Login\n                      {...props}\n                      loggedIn={this.state.loggedIn}\n                      userInfo={this.state.userInfo}\n                      key={window.location.pathname}\n                    />\n                  )}\n                />\n                <Route\n                  path=\"/create\"\n                  render={props => (\n                    <Creation\n                      {...props}\n                      loggedIn={this.state.loggedIn}\n                      userInfo={this.state.userInfo}\n                      key={window.location.pathname}\n                    />\n                  )}\n                />\n                <Route\n                  path=\"/practice\"\n                  render={props => (\n                    <Practice\n                      {...props}\n                      loggedIn={this.state.loggedIn}\n                      userInfo={this.state.userInfo}\n                      key={window.location.pathname}\n                    />\n                  )}\n                />\n                <Route\n                  path=\"/settings\"\n                  render={props => (\n                    <Profile\n                      {...props}\n                      loggedIn={this.state.loggedIn}\n                      userInfo={this.state.userInfo}\n                      key={window.location.pathname}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/\"\n                  render={props => (\n                    <Home\n                      {...props}\n                      loggedIn={this.state.loggedIn}\n                      userInfo={this.state.userInfo}\n                      key={window.location.pathname}\n                    />\n                  )}\n                />\n                <Route path=\"/\">\n                  <Redirect to=\"/\" />\n                </Route>\n              </Switch>\n            </div>\n          ) : (\n            <AppBar position=\"sticky\" style={{ opacity: 0.75 }}>\n              <Toolbar></Toolbar>\n            </AppBar>\n          )}\n        </ThemeProvider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}